version: '3.8'

services:
  # Development application with hot reload
  app:
    build:
      context: .
      target: development
    container_name: job-filtering-funnel-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/job-filtering-funnel-dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - .env.example
    depends_on:
      - mongodb
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - dev-network
    command: npm run dev

  # MongoDB for development
  mongodb:
    image: mongo:7.0
    container_name: job-filtering-funnel-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=job_filtering_funnel_dev
    volumes:
      - mongodb_dev_data:/data/db
    networks:
      - dev-network

  # Redis for development
  redis:
    image: redis:7.2-alpine
    container_name: job-filtering-funnel-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    networks:
      - dev-network

  # Frontend development server
  frontend:
    build:
      context: ./frontend
      target: development
    container_name: job-filtering-funnel-frontend-dev
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - dev-network
    command: npm start

  # MongoDB Express (database admin interface)
  mongo-express:
    image: mongo-express:latest
    container_name: job-filtering-funnel-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongodb
    networks:
      - dev-network
    profiles:
      - admin

  # Redis Commander (Redis admin interface)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: job-filtering-funnel-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - dev-network
    profiles:
      - admin

volumes:
  mongodb_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  dev-network:
    driver: bridge